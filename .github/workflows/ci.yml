name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - 'feature/*'
  pull_request:
    branches:
      - main

jobs:
  # Job para ejecutar las pruebas unitarias
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest

      - name: Set PYTHONPATH # Agregar el PYTHONPATH
        run: echo "PYTHONPATH=${GITHUB_WORKSPACE}" >> $GITHUB_ENV

      - name: Run Unit Tests
        run: pytest tests/

  # Job para ejecutar las pruebas de integración
  integration-tests:
    runs-on: ubuntu-latest
    needs: test  # Se ejecuta después del job de pruebas unitarias
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest httpx

      - name: Run Integration Tests
        run: pytest tests/integration/  # Ejecuta las pruebas de integración en la carpeta específica

  # Job para análisis de código estático con SonarQube/SonarCloud
  sonar:
    runs-on: ubuntu-latest
    needs: integration-tests
    container:
      image: sonarsource/sonar-scanner-cli:latest
      options: --user root  # Ejecutar el contenedor como root para evitar problemas de permisos
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Run SonarQube Scan
        env:
          SONAR_HOST_URL: https://sonarcloud.io
          SONAR_LOGIN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
          -Dsonar.projectKey=tarea1-cc3s2 \
          -Dsonar.organization=renato200419 \
          -Dsonar.sources=. \
          -Dsonar.host.url=$SONAR_HOST_URL \
          -Dsonar.login=$SONAR_LOGIN \
          -Dsonar.branch.name=main



  # Job para construcción de la imagen Docker y despliegue en staging
  deploy:
    runs-on: ubuntu-latest
    needs: sonar  # Se ejecuta después del análisis de SonarCloud
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        run: echo ${{ secrets.DOCKER_HUB_PASSWORD }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/trivia-game-python .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/trivia-game-python

      - name: Deploy to Staging
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}  # Clave SSH para conectarse al servidor de staging
        run: |
          ssh -o StrictHostKeyChecking=no -i $SSH_KEY user@staging-server "docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/trivia-game-python && docker run -d -p 8000:8000 ${{ secrets.DOCKER_HUB_USERNAME }}/trivia-game-python"